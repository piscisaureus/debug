<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title><![CDATA[Adam Argyle]]></title>
        <description><![CDATA[RSS Feed for Adam Argyle: Web design & development tips & tricks: CSS, JS, HTML, Design, & UX.]]></description>
        <link>https://nerdy.dev</link>
        <image>
            <url>https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/rss-icon.png</url>
            <title>Adam Argyle</title>
            <link>https://nerdy.dev</link>
        </image>
        <generator>RSS for Node</generator>
        <lastBuildDate>Sun, 10 Mar 2024 06:50:33 GMT</lastBuildDate>
        <atom:link href="https://nerdy.dev/rss.xml" rel="self" type="application/rss+xml"/>
        <copyright><![CDATA[2024 Adam Argyle]]></copyright>
        <language><![CDATA[en]]></language>
        <webMaster><![CDATA[adam.is@nerdy.dev (Adam Argyle)]]></webMaster>
        <ttl>60</ttl>
        <category><![CDATA[CSS]]></category>
        <category><![CDATA[HTML]]></category>
        <category><![CDATA[JavaScript]]></category>
        <category><![CDATA[Front-End]]></category>
        <category><![CDATA[Design]]></category>
        <icon>https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/rss-icon.png</icon>
        <logo>https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/skull-card.png</logo>
        <item>
            <title><![CDATA[This Site Now Supports At Protocol Mentions And Interactions]]></title>
            <description><![CDATA[
          <img style="display: none" src="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/bluesky-mentions.png" alt="A screenshot of a post from this site with Bluesky mentions linked with an icon." height="1058" width="1360" />
        <p><a href="https://bsky.app/profile/nerdy.dev">Bluesky</a> mentions are now collected and shown on notes and blog posts on this site, just like <a href="https://elk.zone/front-end.social/@argyleink">Mastodon</a>.</p>
]]></description>
            <link>https://nerdy.dev/this-site-now-supports-at-protocol-mentions-and-interactions?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/this-site-now-supports-at-protocol-mentions-and-interactions?utm_source=rss</guid>
            <category><![CDATA[note]]></category>
            <dc:creator><![CDATA[Web Master@admin]]></dc:creator>
            <pubDate>Sun, 10 Mar 2024 06:44:00 GMT</pubDate>
            <enclosure url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/bluesky-mentions.png" length="0" type="image/png"/>
            <media:thumbnail url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/bluesky-mentions.png"/>
        </item>
        <item>
            <title><![CDATA[Bad At CSS 2024 Resolutions]]></title>
            <description><![CDATA[
          <img style="display: none" src="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/css-in-2024.png" alt="CSS in 2024 on some grunge texture" height="498" width="1012" />
        <p><span class="Tag">Ep #6</span><br><strong>New Year, New Resolutions:</strong><br>
A look at me and <a href="https://twitter.com/_davideast">David&#39;s</a> CSS goals for 2024 </p>
<ul>
<li>Finish <a href="https://unpkg.com/open-props@beta/">Open Props v2</a></li>
<li>Build with CSS Anchor</li>
<li>New uses for Container Queries</li>
<li>Multiple backgrounds on <a href="http://gradient.style">gradient.style</a> </li>
<li>Get weirder with <a href="https://scroll-driven-animations.style">Scroll-Driven Animations</a></li>
<li>Help DevTools evolve with modern CSS</li>
</ul>
<p>‚§∑ <a href="https://badatcss.com">badatcss.com</a></p>
]]></description>
            <link>https://nerdy.dev/bad-at-css-2024-resolutions?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/bad-at-css-2024-resolutions?utm_source=rss</guid>
            <category><![CDATA[note]]></category>
            <category><![CDATA[css]]></category>
            <category><![CDATA[media]]></category>
            <dc:creator><![CDATA[adam.is.bad@css]]></dc:creator>
            <pubDate>Fri, 08 Mar 2024 18:12:59 GMT</pubDate>
            <enclosure url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/css-in-2024.png" length="0" type="image/png"/>
            <media:thumbnail url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/css-in-2024.png"/>
        </item>
        <item>
            <title><![CDATA[Interview With Jason About The Devrel Career]]></title>
            <description><![CDATA[
          <img style="display: none" src="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/learn-with-jason-interview.png" alt="Jason and Adam looking at a food menu in a punky lunch location." height="1440" width="2560" />
        <p><strong>Beautifully shot</strong> <time>8m</time> interview with <a href="https://learnwithjason.dev/">Jason Lengstorf</a> about:</p>
<ul>
<li>how people love shredding nice things</li>
<li>is there a &quot;dream job&quot;?</li>
<li>how to know when you&#39;re successful?</li>
<li>a secret for faster career growth?</li>
</ul>
<p><a href="https://www.youtube.com/watch?v=hlRVMknHSqM">Watch on YouTube</a></p>
]]></description>
            <link>https://nerdy.dev/interview-with-jason-about-the-devrel-career?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/interview-with-jason-about-the-devrel-career?utm_source=rss</guid>
            <category><![CDATA[note]]></category>
            <category><![CDATA[media]]></category>
            <category><![CDATA[talks]]></category>
            <dc:creator><![CDATA[atom@argyleink]]></dc:creator>
            <pubDate>Mon, 19 Feb 2024 16:53:21 GMT</pubDate>
            <enclosure url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/learn-with-jason-interview.png" length="0" type="image/png"/>
            <media:thumbnail url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/learn-with-jason-interview.png"/>
        </item>
        <item>
            <title><![CDATA[Learn With Jason (live in studio)]]></title>
            <description><![CDATA[
          <img style="display: none" src="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/noisee-mind-blown.png" alt="asdf" height="720" width="1280" />
        <p><a href="https://noisee.netlify.app/">Noisee</a> is an ephemeral visual audio experience shared with friends <a href="https://noisee.netlify.app/room/1337">in a room</a>. Everyone connects a microphone, then sees their noise combined with everyone elses noise. </p>
<p>Watch me rock it solo ü§òüèªüíÄ it&#39;s fun, and weird.</p>
<p><video 
            src=https://res.cloudinary.com/dnpmdb8r8/video/upload/f_auto,w_auto,q_auto/f_auto,q_auto/argyleink/noisee-walkthrough.mp4 
            width="1920" 
            height="1082"
            alt=" "
            poster="https://res.cloudinary.com/dnpmdb8r8/video/upload/so_0.5,f_auto,w_auto,q_auto/f_auto,q_auto/argyleink/noisee-walkthrough.jpg"
            controls 
            loop
            muted 
            playsinline 
            allowFullScreen
          /></p>
<p>You can be soft, loud, or connect a <a href="https://teenage.engineering/store/po-128-mega-man/">Megaman Pocket Operator</a> like a nerd.</p>
<p><a href="https://youtu.be/tSfSY3Ni3X0?t=3486"><img 
            loading="lazy" 
            src="https://res.cloudinary.com/dnpmdb8r8/image/upload/f_auto,c_limit,q_auto,w_auto/w_800/argyleink/noisee-po-128.png" 
            alt="" 
            title="Me holding a pocket operator in the stream. " 
            decoding="async"
            width="225" 
            height="127"
          /></a></p>
<p>I got to hang out <a href="https://www.learnwithjason.dev/learn-with-jason-live-live-the-css-stravaganza"><strong>in studio</strong></a> with <a href="https://www.learnwithjason.dev/">Jason Lengstorf</a> to share the tech, and CSS, that power the app.</p>
<div style="display: flex; flex-flow: row wrap;">
  <picture>
    <source srcset="https://fonts.gstatic.com/s/e/notoemoji/latest/2728/512.webp" type="image/webp">
    <img src="https://fonts.gstatic.com/s/e/notoemoji/latest/2728/512.gif" alt="‚ú®" width="100" height="100">
  </picture>
  <picture>
    <source srcset="https://fonts.gstatic.com/s/e/notoemoji/latest/1f913/512.webp" type="image/webp">
    <img src="https://fonts.gstatic.com/s/e/notoemoji/latest/1f913/512.gif" alt="ü§ì" width="100" height="100">
  </picture>
  <picture>
    <source srcset="https://fonts.gstatic.com/s/e/notoemoji/latest/1f913/512.webp" type="image/webp">
    <img src="https://fonts.gstatic.com/s/e/notoemoji/latest/1f913/512.gif" alt="ü§ì" width="100" height="100">
  </picture>
  <picture>
    <source srcset="https://fonts.gstatic.com/s/e/notoemoji/latest/2728/512.webp" type="image/webp">
    <img src="https://fonts.gstatic.com/s/e/notoemoji/latest/2728/512.gif" alt="‚ú®" width="100" height="100">
  </picture>
</div>

<p><a href="https://www.youtube.com/watch?v=tSfSY3Ni3X0"><img loading="lazy" src="https://www.learnwithjason.dev/learn-with-jason-live-live-the-css-stravaganza/w_2560/video-poster.jpg" alt="" title="Title " /></a></p>
<p><a href="https://www.youtube.com/watch?v=tSfSY3Ni3X0">Binge on YouTube</a>.</p>
<p><small>See if you can find the 4 easer eggs in the app without watching the video üòà</small></p>

        <h2>
          The idea
          <a name="the-idea" href="#the-idea">#</a>
        </h2>
       <p>When Jason and I brewed up this in person shindig, I wanted to have a punky moment with him, like play electric guitar. Which we did!</p>
<p><img 
            loading="lazy" 
            src="https://res.cloudinary.com/dnpmdb8r8/image/upload/f_auto,c_limit,q_auto,w_auto/w_640/argyleink/noisee-stairway-to-heaven.png" 
            alt="" 
            title="Title " 
            decoding="async"
            width="640" 
            height="360"
          /></p>
<p>I also wanted it to be somethin weird, connected, and expressive. </p>
<p><strong>How about audio over <a href="https://www.partykit.io/">PartyKit</a>, visualised with gradients‚ÄΩ</strong></p>
<p>Rad.</p>

        <h2>
          Stream.start()
          <a name="stream.start()" href="#stream.start()">#</a>
        </h2>
       <p>I came prepared with some process artifacts to help folks see the dots I connected with web tech.</p>
<p>The <a href="https://codepen.io/argyleink/pen/bGZaXXq">first artifact/demo</a> is an introduction to <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@property"><code>@property</code></a>. </p>
<p>
          <iframe 
            class="codepen-embed" 
            scrolling="no" 
            title="null" 
            src="https://codepen.io/argyleink/embed/preview/bGZaXXq?default-tab=result&editable=true&theme-id=43079" 
            frameborder="no" 
            loading="lazy" 
            allowtransparency="true" 
            allowfullscreen="true"
          >
            See the Pen <a href="https://codepen.io/argyleink/embed/preview/bGZaXXq">
            Hot text-emphasis</a> by Adam Argyle (<a href="https://codepen.io/argyleink">@argyleink</a>)
            on <a href="https://codepen.io">CodePen</a>.
          </iframe>
        </p>
<p>It delightfully derailed into details about CSS <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@layer"><code>@layer</code></a> and <a href="https://drafts.csswg.org/css-color/#css-system-colors">System Colors</a> like <code>Highlight</code> and <code>Canvas</code>. </p>
<p><a href="https://youtu.be/tSfSY3Ni3X0?t=700"><img 
            loading="lazy" 
            src="https://res.cloudinary.com/dnpmdb8r8/image/upload/f_auto,c_limit,q_auto,w_auto/w_1280/argyleink/noisee-at-property.png" 
            alt="" 
            title="Title " 
            decoding="async"
            width="1280" 
            height="720"
          /></a></p>
<p>But also took a trip down memory lane for an early JS feature:</p>
<pre><code class="language-html"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">button</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;yo&quot;</span><span style="color: var(--shiki-color-text)">&gt;‚Ä¶&lt;/</span><span style="color: var(--shiki-token-string-expression)">button</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>
</code></pre>
<pre><code class="language-js"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-constant)">yo</span><span style="color: var(--shiki-color-text)">.onclick </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> ‚Ä¶</span></span></code></pre>
</code></pre>
<p>No <code>document.querySelector()</code> needed, <strong>element ID&#39;s are on the <code>window</code> object</strong>. Woot woot.</p>
<p>I love it for demos.</p>

        <h2>
          Finally a gradient demo
          <a name="finally-a-gradient-demo" href="#finally-a-gradient-demo">#</a>
        </h2>
       <p>Once we&#39;d ramped up on <code>@property</code> and kickflipped off it, I had another demo ready, this one on how the gradient reacting to audio would work. </p>
<p>In classic argyleink fashion, I use the gradient <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/linear-gradient#color-hint">transition hint</a> to control a hard line gradient.</p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-string-expression)">html</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">transition</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">--size 1</span><span style="color: var(--shiki-token-keyword)">s</span><span style="color: var(--shiki-token-constant)"> </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--ease-spring-4)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-image</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">radial-gradient</span><span style="color: var(--shiki-token-constant)">(</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">    circle </span><span style="color: var(--shiki-token-keyword)">at</span><span style="color: var(--shiki-token-constant)"> center</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-constant)"> </span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">    black 0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-constant)"> </span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">    </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--size)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-constant)"> </span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">    white 0</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">  )</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">}</span></span></code></pre>
</code></pre>
<p>Hook that hint up to a range input, add some springyness for flare, and you got yourself an animated hard line gradient. Ready for a brutalist experiment, or a mask if you so fancy!</p>
<p><video 
            src=https://res.cloudinary.com/dnpmdb8r8/video/upload/f_auto,w_auto,q_auto/f_auto,q_auto/argyleink/noisee-slider.mp4 
            width="1024" 
            height="578"
            alt=" "
            poster="https://res.cloudinary.com/dnpmdb8r8/video/upload/so_0.5,f_auto,w_auto,q_auto/f_auto,q_auto/argyleink/noisee-slider.jpg"
            controls 
            loop
            muted 
            playsinline 
            allowFullScreen
          /></p>
<p><a href="https://codepen.io/argyleink/pen/vYPdBOO">Try it for yourself</a> if you like!</p>
<p>If you&#39;re interested in gradient transition hints, Jason and I visualize it on <a href="https://gradient.style">gradient.style</a>. I show him how to make a radial gradient, 0 out the stop positions, then <a href="https://gradient.style/#type=radial&space=oklab&radial_shape=circle&radial_position=%7B%22x%22%3A50%2C%22y%22%3A50%7D&radial_named_position=center&radial_size=farthest-corner&stops=%7B%22kind%22%3A%22stop%22%2C%22color%22%3A%22oklch%2870%25+0.5+340%29%22%2C%22auto%22%3A%220%22%2C%22position1%22%3A%220%22%2C%22position2%22%3A%220%22%7D&stops=%7B%22kind%22%3A%22hint%22%2C%22auto%22%3A%2250%22%2C%22percentage%22%3A64%7D&stops=%7B%22kind%22%3A%22stop%22%2C%22color%22%3A%22%230000%22%2C%22auto%22%3A%22100%22%2C%22position1%22%3A0%2C%22position2%22%3A%22100%22%7D">adjust the transition hint</a>.</p>
<p><a href="https://youtu.be/tSfSY3Ni3X0?t=2550"><img 
            loading="lazy" 
            src="https://res.cloudinary.com/dnpmdb8r8/image/upload/f_auto,c_limit,q_auto,w_auto/w_1280/argyleink/noisee-gradient-style.png" 
            alt="" 
            title="Title " 
            decoding="async"
            width="1280" 
            height="720"
          /></a></p>

        <h2>
          Connecting audio streams to CSS
          <a name="connecting-audio-streams-to-css" href="#connecting-audio-streams-to-css">#</a>
        </h2>
       <p>The next prototype is all about hooking up transition hints to audio streams. The UX here requires a few steps:</p>
<ol>
<li>Asking for mic access</li>
<li>Choosing a mic (optional, a default will be chosen)</li>
<li>Making some noise</li>
</ol>
<p>Javascript asks for the user&#39;s mic permission with:</p>
<pre><code class="language-js"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">navigator</span><span style="color: var(--shiki-color-text)">.mediaDevices</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">.getUserMedia</span><span style="color: var(--shiki-color-text)">({</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    audio</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      autoGainControl</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      latency</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    }</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  })</span></span></code></pre>
</code></pre>
<p>Then I create an <a href="https://developer.mozilla.org/en-US/docs/Web/API/AudioContext">AudioContext</a> to interface with the streaming audio:</p>
<pre><code class="language-js"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-constant)">state</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">stream</span><span style="color: var(--shiki-color-text)">.audio </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AudioContext</span><span style="color: var(--shiki-color-text)">()</span></span></code></pre>
</code></pre>
<p>Then I do some fancy work to filter out a highpass and lowpass subset of stream data. This let&#39;s me have two pieces per person to use as fun data. </p>
<p>I then read values from the mic stream audio context at the animation framerate:</p>
<pre><code class="language-js"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">requestAnimationFrame</span><span style="color: var(--shiki-color-text)">(readMicStream)</span></span></code></pre>
</code></pre>
<p>Eventually I derive a lowpass low number and a highpass high number, and set the custom properties. This also means I no longer need to transition the <code>@property</code> because I&#39;m now setting values with <a href="https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame">rAF</a>.</p>
<pre><code class="language-js"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-constant)">html</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">style</span><span style="color: var(--shiki-token-function)">.setProperty</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;--frequency-low&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">low</span><span style="color: var(--shiki-color-text)">.value </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-token-string-expression)">&#39;%&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">html</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">style</span><span style="color: var(--shiki-token-function)">.setProperty</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;--frequency-high&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">high</span><span style="color: var(--shiki-color-text)">.value </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-token-string-expression)">&#39;%&#39;</span><span style="color: var(--shiki-color-text)">)</span></span></code></pre>
</code></pre>
<p>Since the demo needs HTML5 mic access, open <a href="https://cdpn.io/pen/debug/BabQazP">this debug link</a> and give the basic demo a try. Or <a href="https://youtu.be/tSfSY3Ni3X0?t=2850">watch Jason and I give the demo a whirl</a>.</p>
<p><a href="https://youtu.be/tSfSY3Ni3X0?t=2865"><img 
            loading="lazy" 
            src="https://res.cloudinary.com/dnpmdb8r8/image/upload/f_auto,c_limit,q_auto,w_auto/w_1280/argyleink/noisee-audio-test.png" 
            alt="" 
            title="Title " 
            decoding="async"
            width="3020" 
            height="1356"
          /></a></p>

        <h2>
          Go live while live streaming
          <a name="go-live-while-live-streaming" href="#go-live-while-live-streaming">#</a>
        </h2>
       <p>With that proof of concept demo, I took it and ran. Spent a week or so making a sweet app that connected your mic created gradients with other people. </p>
<p><a href="https://youtu.be/tSfSY3Ni3X0?t=3409"><img 
            loading="lazy" 
            src="https://res.cloudinary.com/dnpmdb8r8/image/upload/f_auto,c_limit,q_auto,w_auto/w_1280/argyleink/noisee-release.png" 
            alt="" 
            title="Title " 
            decoding="async"
            width="1540" 
            height="922"
          /></a></p>
<p>Jason and I make the deployment URL official and sent it to the folks on the live stream. Def a highlight moment of the stream. <a href="https://youtu.be/tSfSY3Ni3X0?t=3409">Tune into the recording</a>, see the chaos that ensues!</p>
<p><img 
            loading="lazy" 
            src="https://res.cloudinary.com/dnpmdb8r8/image/upload/f_auto,c_limit,q_auto,w_auto/w_1280/argyleink/noisee-chaos.png" 
            alt="" 
            title="Title " 
            decoding="async"
            width="2050" 
            height="968"
          /></p>
<p><a href="https://youtu.be/tSfSY3Ni3X0?t=3614">We go on</a> to discuss <a href="https://kit.svelte.dev/">Svelte</a> and <a href="https://partykit.dev/">PartyKit</a>, diving into the <a href="https://github.com/learnwithjason/noisee">code on GitHub</a>.</p>

        <h2>
          Four easter eggs
          <a name="four-easter-eggs" href="#four-easter-eggs">#</a>
        </h2>
       <p>Can you find the 4 easter eggs without <a href="https://youtu.be/tSfSY3Ni3X0?t=4083">watching us find them on video</a>?</p>
<ol>
<li>Life after death</li>
<li>Turquoise</li>
<li>Give it the time of day</li>
<li>Take me with you</li>
</ol>
<p>I had <strong>such a blast</strong> hangin out with Jason; and I&#39;m happy to share <em>we may have shot some more video</em> while I was there‚Ä¶ so maybe there&#39;s more to come!</p>
<p><a href="https://noisee.netlify.app"><img 
            loading="lazy" 
            src="https://res.cloudinary.com/dnpmdb8r8/image/upload/f_auto,c_limit,q_auto,w_auto/w_800/argyleink/noisee.png" 
            alt="" 
            title="Title " 
            decoding="async"
            width="2944" 
            height="1010"
          /></a></p>
<p>Links and resources:</p>
<ul>
<li><a href="https://www.learnwithjason.dev">https://www.learnwithjason.dev</a></li>
<li><a href="https://www.youtube.com/@learnwithjason">https://www.youtube.com/@learnwithjason</a></li>
<li><a href="https://www.twitch.tv/jlengstorf">https://www.twitch.tv/jlengstorf</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@property">https://developer.mozilla.org/en-US/docs/Web/CSS/@property</a></li>
<li><a href="https://open-props.style">https://open-props.style</a></li>
<li><a href="https://www.learnwithjason.dev/build-custom-interfaces-using-css-open-props/">https://www.learnwithjason.dev/build-custom-interfaces-using-css-open-props/</a></li>
<li><a href="https://gradient.style">https://gradient.style</a></li>
<li><a href="https://mdn.io/audiocontext">https://mdn.io/audiocontext</a></li>
<li><a href="https://kit.svelte.dev">https://kit.svelte.dev</a></li>
<li><a href="https://github.com/learnwithjason/noisee/tree/main">https://github.com/learnwithjason/noisee/tree/main</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/system-color">https://developer.mozilla.org/en-US/docs/Web/CSS/system-color</a></li>
<li><a href="https://www.youtube.com/live/tSfSY3Ni3X0?si=3e7bYhuTrAOCQOI8">https://www.youtube.com/live/tSfSY3Ni3X0?si=3e7bYhuTrAOCQOI8</a></li>
</ul>
]]></description>
            <link>https://nerdy.dev/jason-and-adam-do-portland?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/jason-and-adam-do-portland?utm_source=rss</guid>
            <category><![CDATA[blog]]></category>
            <category><![CDATA[media]]></category>
            <category><![CDATA[css]]></category>
            <category><![CDATA[js]]></category>
            <category><![CDATA[git]]></category>
            <dc:creator><![CDATA[atom@argyleink]]></dc:creator>
            <pubDate>Wed, 07 Feb 2024 05:53:45 GMT</pubDate>
            <enclosure url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/noisee-mind-blown.png" length="0" type="image/png"/>
            <media:thumbnail url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/noisee-mind-blown.png"/>
        </item>
        <item>
            <title><![CDATA[Kelvin Show]]></title>
            <description><![CDATA[
          <img style="display: none" src="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/kelvin-show.jpg" alt="some title" height="1536" width="3024" />
        <p><a href="https://www.youtube.com/watch?v=nCVm-8YaD_g">Hung out</a> with the super fun <a href="https://www.youtube.com/@dominuskelvin">Kelvin Omereshone</a> and chatted about, you guessed it, <strong>CSS</strong>!</p>
]]></description>
            <link>https://nerdy.dev/kelvin-show?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/kelvin-show?utm_source=rss</guid>
            <category><![CDATA[note]]></category>
            <category><![CDATA[media]]></category>
            <dc:creator><![CDATA[DevRel@Google]]></dc:creator>
            <pubDate>Thu, 01 Feb 2024 04:22:05 GMT</pubDate>
            <enclosure url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/kelvin-show.jpg" length="0" type="image/jpeg"/>
            <media:thumbnail url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/kelvin-show.jpg"/>
        </item>
        <item>
            <title><![CDATA[Make some hacky noise with CSS gradients]]></title>
            <description><![CDATA[
          <img style="display: none" src="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/gradient-noise-stack.png" alt="Text emphasized alt text example" height="1396" width="1576" />
        <p>Here&#39;s an effect I stumbled on and thought was kinda cool. I found it by animating the size of the ring in a repeating radial gradient to <code>0px</code> with <code>@property</code>, really <em>slowly</em>, and notice that when it got near 0, it started to freak out.</p>
<p><video 
            src=https://res.cloudinary.com/dnpmdb8r8/video/upload/f_auto,w_auto,q_auto/f_auto,q_auto/argyleink/radial-gradient-noise.mp4 
            width="1644" 
            height="926"
            alt=" "
            poster="https://res.cloudinary.com/dnpmdb8r8/video/upload/so_0.5,f_auto,w_auto,q_auto/f_auto,q_auto/argyleink/radial-gradient-noise.jpg"
            controls 
            loop
            muted 
            playsinline 
            allowFullScreen
          /></p>
<p>Then I started to wonder.</p>

        <h2>
          The Setup
          <a name="the-setup" href="#the-setup">#</a>
        </h2>
       <p>Here&#39;s the mask I was working with at first, a nice reasonale <code>5px</code> and <code>5px</code> gap radial repeating mask:</p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">.noise</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  --lines</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">4</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">mask</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">repeating-radial-gradient</span><span style="color: var(--shiki-token-constant)">(</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">    circle </span><span style="color: var(--shiki-token-keyword)">at</span><span style="color: var(--shiki-token-constant)"> center</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">    #000</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">    </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--lines)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">    #000</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">    0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-constant)"> </span><span style="color: var(--shiki-token-comment)">/* transition hints make code easier to manage */</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">    #0000</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">    </span><span style="color: var(--shiki-token-function)">calc</span><span style="color: var(--shiki-token-constant)">(</span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--lines) </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-token-constant)"> 2)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">    #0000 0 </span><span style="color: var(--shiki-token-comment)">/* trailing 0 is part of the hard stop logic */</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">  )</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">}</span></span></code></pre>
</code></pre>
<p>
          <iframe 
            class="codepen-embed" 
            scrolling="no" 
            title="null" 
            src="https://codepen.io/argyleink/embed/preview/wvOeEwr?default-tab=result&editable=true&theme-id=43079" 
            frameborder="no" 
            loading="lazy" 
            allowtransparency="true" 
            allowfullscreen="true"
          >
            See the Pen <a href="https://codepen.io/argyleink/embed/preview/wvOeEwr">
            Hot text-emphasis</a> by Adam Argyle (<a href="https://codepen.io/argyleink">@argyleink</a>)
            on <a href="https://codepen.io">CodePen</a>.
          </iframe>
        </p>
<p>Still a pretty sweet effect over some text I think!</p>

        <h2>
          The Trick
          <a name="the-trick" href="#the-trick">#</a>
        </h2>
       <p>BUT, when you change that <code>--lines</code> value to something super small, it starts to distort and go into subpixel rounding stuff? </p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">.noise</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  --lines</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.0003</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">}</span></span></code></pre>
</code></pre>
<p>
          <iframe 
            class="codepen-embed" 
            scrolling="no" 
            title="null" 
            src="https://codepen.io/argyleink/embed/preview/JjzJEMV?default-tab=result&editable=true&theme-id=43079" 
            frameborder="no" 
            loading="lazy" 
            allowtransparency="true" 
            allowfullscreen="true"
          >
            See the Pen <a href="https://codepen.io/argyleink/embed/preview/JjzJEMV">
            Hot text-emphasis</a> by Adam Argyle (<a href="https://codepen.io/argyleink">@argyleink</a>)
            on <a href="https://codepen.io">CodePen</a>.
          </iframe>
        </p>
<p>And boom, noise. At certain times it looks like radial noise too. Trails of its origins.</p>

        <h2>
          Animating it
          <a name="animating-it" href="#animating-it">#</a>
        </h2>
       <p>I already knew that <code>@property</code> could animate the noise because of how I stumbled upon the effect. What I didn&#39;t know yet, was what were the fun knobs I could turn?!</p>
<p>Kick off the gradient animation fun with an <code>@property</code>:</p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">@property</span><span style="color: var(--shiki-color-text)"> --lines {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  syntax: &quot;&lt;length</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">&quot;;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  inherits: false;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-string-expression)">initial-value</span><span style="color: var(--shiki-color-text)">: 0.00010px;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">}</span></span></code></pre>
</code></pre>
<p>And some keyframes, <em>subtly</em> animating from one <small>tiny</small> little subpixel value to another.</p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> liner {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  50% {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    --lines</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.00012</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  }</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">}</span></span></code></pre>
</code></pre>
<p>Link these things up for animation on our element:</p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">@import</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;https://unpkg.com/open-props/durations.min.css&quot;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-function)">.noise</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">animation</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">liner </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--hour) linear infinite</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">}</span></span></code></pre>
</code></pre>
<p>and <strong>watch the noise</strong>!  </p>
<p>
          <iframe 
            class="codepen-embed" 
            scrolling="no" 
            title="null" 
            src="https://codepen.io/argyleink/embed/preview/vYPZgXB?default-tab=result&editable=true&theme-id=43079" 
            frameborder="no" 
            loading="lazy" 
            allowtransparency="true" 
            allowfullscreen="true"
          >
            See the Pen <a href="https://codepen.io/argyleink/embed/preview/vYPZgXB">
            Hot text-emphasis</a> by Adam Argyle (<a href="https://codepen.io/argyleink">@argyleink</a>)
            on <a href="https://codepen.io">CodePen</a>.
          </iframe>
        </p>
<p>Also, observe the absolute chaos while the power of CSS handles it like a 60fps game engine.</p>

        <h2>
          Outro
          <a name="outro" href="#outro">#</a>
        </h2>
       <p>The levers / what you should toy with:</p>
<ol>
<li>the delta in values</li>
<li>values themselves</li>
<li>duration</li>
</ol>
<p>Even try adding reasonable values, like <code>10px</code> lines with a reasonable duration like <code>.5s</code> or <code>var(--atom)</code>.</p>
]]></description>
            <link>https://nerdy.dev/hacky-css-noise-with-repeating-gradients?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/hacky-css-noise-with-repeating-gradients?utm_source=rss</guid>
            <category><![CDATA[blog]]></category>
            <category><![CDATA[css]]></category>
            <dc:creator><![CDATA[atom@argyleink]]></dc:creator>
            <pubDate>Mon, 22 Jan 2024 05:08:40 GMT</pubDate>
            <enclosure url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/gradient-noise-stack.png" length="0" type="image/png"/>
            <media:thumbnail url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/gradient-noise-stack.png"/>
        </item>
        <item>
            <title><![CDATA[View Transition Alias]]></title>
            <description><![CDATA[<pre><code class="language-js"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-constant)">document</span><span style="color: var(--shiki-color-text)">.startViewTransition</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// too much to write</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// makes alias: short for transition</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">txn</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">document</span><span style="color: var(--shiki-color-text)">.startViewTransition</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-function)">txn</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// much better</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">})</span></span></code></pre>
</code></pre>
<p>One alias <em>could</em> save a lot of characters.</p>
<p><small>sounds like a Geico commercial‚Ä¶</small></p>
]]></description>
            <link>https://nerdy.dev/view-transition-alias?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/view-transition-alias?utm_source=rss</guid>
            <category><![CDATA[note]]></category>
            <category><![CDATA[js]]></category>
            <dc:creator><![CDATA[evil@atom]]></dc:creator>
            <pubDate>Wed, 17 Jan 2024 22:18:51 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[A Practical Introduction To Scroll Driven Animations With CSS Scroll And View]]></title>
            <description><![CDATA[
          <video style="display: none" src="https://res.cloudinary.com/dnpmdb8r8/video/upload/argyleink/codrops-carousel.mp4" alt="A preview of the carousel features" height="1080" width="1922" />
        <p><a href="https://tympanus.net/codrops/2024/01/17/a-practical-introduction-to-scroll-driven-animations-with-css-scroll-and-view/">A practical introduction to Scroll Driven Animations with CSS <code>scroll()</code> and <code>view()</code></a></p>
<p>My first <a href="https://tympanus.net/codrops/">Codrops</a> article ü§ì</p>
]]></description>
            <link>https://nerdy.dev/a-practical-introduction-to-scroll-driven-animations-with-css-scroll-and-view?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/a-practical-introduction-to-scroll-driven-animations-with-css-scroll-and-view?utm_source=rss</guid>
            <category><![CDATA[note]]></category>
            <category><![CDATA[css]]></category>
            <dc:creator><![CDATA[atom@argyleink]]></dc:creator>
            <pubDate>Wed, 17 Jan 2024 17:42:46 GMT</pubDate>
            <enclosure url="https://res.cloudinary.com/dnpmdb8r8/video/upload/argyleink/codrops-carousel.mp4" length="0" type="video/mp4"/>
            <media:thumbnail url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/codrops-carousel.mp4"/>
        </item>
        <item>
            <title><![CDATA[A Squishy Radio Group]]></title>
            <description><![CDATA[
          <video style="display: none" src="https://res.cloudinary.com/dnpmdb8r8/video/upload/argyleink/squishy-radio-group.mp4" alt="some title" height="1440" width="1920" />
        <p>Radio groups are so powerful! Combine them with <code>:has()</code>, animated <code>grid-template-columns</code> 
and <code>linear()</code> <a href="https://open-props.style/#easing">easing</a> and you&#39;ve got yourself 
a neat little single picker UX.</p>
<p><a href="https://codepen.io/argyleink/pen/ExMgWLe">Try it on Codepen</a></p>
]]></description>
            <link>https://nerdy.dev/a-squishy-radio-group?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/a-squishy-radio-group?utm_source=rss</guid>
            <category><![CDATA[note]]></category>
            <category><![CDATA[css]]></category>
            <dc:creator><![CDATA[atom@argyleink]]></dc:creator>
            <pubDate>Thu, 11 Jan 2024 22:30:28 GMT</pubDate>
            <enclosure url="https://res.cloudinary.com/dnpmdb8r8/video/upload/argyleink/squishy-radio-group.mp4" length="0" type="video/mp4"/>
            <media:thumbnail url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/squishy-radio-group.mp4"/>
        </item>
        <item>
            <title><![CDATA[Neue Bento Layouts With Grid Has And Container Queries]]></title>
            <description><![CDATA[
          <video style="display: none" src="https://res.cloudinary.com/dnpmdb8r8/video/upload/argyleink/vt-bento-cqueries.mp4" alt="video demo of the grid responding to the number of boxes and orientation" height="1270" width="1692" />
        <p>A CSS bento-like grid that&#39;s aware of the number of children and aspect ratio available thanks to <code>:has()</code> and <code>@container</code>.</p>
<p><a href="https://codepen.io/argyleink/pen/RwdRaVg">Try the demo</a></p>
<p>Shout out to <code>view-transition</code>&#39;s for making the interactive demo so much more compelling.</p>
]]></description>
            <link>https://nerdy.dev/neue-bento-layouts-with-grid-has-and-container-queries?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/neue-bento-layouts-with-grid-has-and-container-queries?utm_source=rss</guid>
            <category><![CDATA[note]]></category>
            <category><![CDATA[css]]></category>
            <dc:creator><![CDATA[DevRel@Google]]></dc:creator>
            <pubDate>Mon, 08 Jan 2024 22:30:47 GMT</pubDate>
            <enclosure url="https://res.cloudinary.com/dnpmdb8r8/video/upload/argyleink/vt-bento-cqueries.mp4" length="0" type="video/mp4"/>
            <media:thumbnail url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/vt-bento-cqueries.mp4"/>
        </item>
    </channel>
</rss>