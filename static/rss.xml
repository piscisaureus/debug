<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title><![CDATA[Adam Argyle]]></title>
        <description><![CDATA[RSS Feed for Adam Argyle: Web design & development tips & tricks: CSS, JS, HTML, Design, & UX.]]></description>
        <link>https://nerdy.dev</link>
        <image>
            <url>https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/rss-icon.png</url>
            <title>Adam Argyle</title>
            <link>https://nerdy.dev</link>
        </image>
        <generator>RSS for Node</generator>
        <lastBuildDate>Fri, 07 Apr 2023 20:33:21 GMT</lastBuildDate>
        <atom:link href="https://nerdy.dev/rss.xml" rel="self" type="application/rss+xml"/>
        <copyright><![CDATA[2023 Adam Argyle]]></copyright>
        <language><![CDATA[en]]></language>
        <webMaster><![CDATA[adam.is@nerdy.dev (Adam Argyle)]]></webMaster>
        <ttl>60</ttl>
        <category><![CDATA[CSS]]></category>
        <category><![CDATA[HTML]]></category>
        <category><![CDATA[JavaScript]]></category>
        <category><![CDATA[Front-End]]></category>
        <category><![CDATA[Design]]></category>
        <icon>https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/rss-icon.png</icon>
        <logo>https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/skull-card.png</logo>
        <item>
            <title><![CDATA[Farthest Corner Visualized]]></title>
            <description><![CDATA[
          <video style="display: none" src="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/farthest-corner.mp4" alt="Radial gradient moving back and forth changing size as it gets nearer or farther from a corner." height="958"  width="1586" />
        <p>Multiple hard stops in a radial gradient sized as <code>farthest-corner</code>, this is me changing the <code>x</code> position first from <code>0</code> to <code>-100</code>, then the <code>y</code> in the same manor. </p>
]]></description>
            <link>https://nerdy.dev/farthest-corner-visualized?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/farthest-corner-visualized?utm_source=rss</guid>
            <category><![CDATA[note]]></category>
            <category><![CDATA[css]]></category>
            <dc:creator><![CDATA[adam@argyleink]]></dc:creator>
            <pubDate>Fri, 07 Apr 2023 20:25:23 GMT</pubDate>
            <enclosure url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/farthest-corner.mp4" length="0" type="video/mp4"/>
            <media:thumbnail url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/farthest-corner.mp4"/>
        </item>
        <item>
            <title><![CDATA[Hue Light Travel Planet Morph]]></title>
            <description><![CDATA[
          <video style="display: none" src="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/hue-travel.mp4" alt="Radial gradient like a sun but changing colors and kinda morphing to different planets." height="1132"  width="1510" />
        ]]></description>
            <link>https://nerdy.dev/hue-light-travel-planet-morph?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/hue-light-travel-planet-morph?utm_source=rss</guid>
            <category><![CDATA[note]]></category>
            <category><![CDATA[css]]></category>
            <dc:creator><![CDATA[adam@argyleink]]></dc:creator>
            <pubDate>Wed, 05 Apr 2023 03:49:01 GMT</pubDate>
            <enclosure url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/hue-travel.mp4" length="0" type="video/mp4"/>
            <media:thumbnail url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/hue-travel.mp4"/>
        </item>
        <item>
            <title><![CDATA[Device Width Is Like Device Color Gamut]]></title>
            <description><![CDATA[<p>Viewport widths n&#39; color gamuts;<br><strong>As each widen, adapt the UI.</strong></p>
]]></description>
            <link>https://nerdy.dev/device-width-is-like-device-color-gamut?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/device-width-is-like-device-color-gamut?utm_source=rss</guid>
            <category><![CDATA[note]]></category>
            <category><![CDATA[css]]></category>
            <dc:creator><![CDATA[adam@argyleink]]></dc:creator>
            <pubDate>Wed, 05 Apr 2023 03:36:31 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Gradient Stripes With Hard Stops Visualized]]></title>
            <description><![CDATA[
          <video style="display: none" src="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/gradient-stripes.mp4" alt="some title" height="1132"  width="1510" />
        <pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">.classic-gradient</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-image</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">    </span><span style="color: var(--shiki-token-function)">linear-gradient</span><span style="color: var(--shiki-token-constant)">(45</span><span style="color: var(--shiki-token-keyword)">deg</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-constant)"> </span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">      white</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-constant)"> </span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">      black 0</span><span style="color: var(--shiki-token-keyword)">%</span><span style="color: var(--shiki-token-constant)"> 20</span><span style="color: var(--shiki-token-keyword)">%</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-constant)"> </span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">      white 0</span><span style="color: var(--shiki-token-keyword)">%</span><span style="color: var(--shiki-token-constant)"> 40</span><span style="color: var(--shiki-token-keyword)">%</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-constant)"> </span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">      black 0</span><span style="color: var(--shiki-token-keyword)">%</span><span style="color: var(--shiki-token-constant)"> 60</span><span style="color: var(--shiki-token-keyword)">%</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-constant)"> </span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">      white 0</span><span style="color: var(--shiki-token-keyword)">%</span><span style="color: var(--shiki-token-constant)"> 80</span><span style="color: var(--shiki-token-keyword)">%</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-constant)"> </span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">      black 0</span><span style="color: var(--shiki-token-keyword)">%</span><span style="color: var(--shiki-token-constant)"> 100</span><span style="color: var(--shiki-token-keyword)">%</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">    )</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  ;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">}</span></span></code></pre>
</code></pre>
]]></description>
            <link>https://nerdy.dev/gradient-stripes-with-hard-stops-visualized?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/gradient-stripes-with-hard-stops-visualized?utm_source=rss</guid>
            <category><![CDATA[note]]></category>
            <category><![CDATA[css]]></category>
            <dc:creator><![CDATA[adam@argyleink]]></dc:creator>
            <pubDate>Tue, 04 Apr 2023 04:09:00 GMT</pubDate>
            <enclosure url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/gradient-stripes.mp4" length="0" type="video/mp4"/>
            <media:thumbnail url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/gradient-stripes.mp4"/>
        </item>
        <item>
            <title><![CDATA[Css Text Wrap Balance]]></title>
            <description><![CDATA[
          <img style="display: none" src="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/text-wrap-balance.png" alt="some title" height="1450"  width="2944" />
        <p>ðŸ†• post on <a href="https://developer.chrome.com/blog/css-text-wrap-balance/">developer.chrome.com</a></p>
<p>wrap your head aroundâ€¦<br><a href="https://developer.chrome.com/blog/css-text-wrap-balance/">#CSS</a> <code>text-wrap: balance</code></p>
<p>âœ¨ <strong>balanced headlines</strong> âœ¨<br>with one magical line of CSS</p>
<p><small>only <a href="https://www.google.com/chrome/canary/">Chrome Canary</a> atm, details in article</small></p>
]]></description>
            <link>https://nerdy.dev/css-text-wrap-balance?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/css-text-wrap-balance?utm_source=rss</guid>
            <category><![CDATA[note]]></category>
            <category><![CDATA[css]]></category>
            <dc:creator><![CDATA[DevRel@Google]]></dc:creator>
            <pubDate>Mon, 03 Apr 2023 18:17:56 GMT</pubDate>
            <enclosure url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/text-wrap-balance.png" length="0" type="image/png"/>
            <media:thumbnail url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/text-wrap-balance.png"/>
        </item>
        <item>
            <title><![CDATA[Open Props okLCH beta]]></title>
            <description><![CDATA[
          <img style="display: none" src="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/oklch-palette.png" alt="Text emphasized alt text example" height="1728"  width="3024" />
        <p>Set a hue with a nice <a href="#named-hues">named prop</a> or any <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/angle">angle</a>, get back a <strong>15 shade palette</strong>.</p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-string-expression)">*</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  --color-hue</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--hue-indigo)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">}</span></span></code></pre>
</code></pre>
<p><strong>Boom.</strong><br>Now <code>var(--color-0)</code> to <code>var(--color-15)</code> are indigo.</p>
<p><img 
            loading="lazy" 
            src="https://res.cloudinary.com/dnpmdb8r8/image/upload/f_auto,c_limit,q_auto,w_auto/w_400/argyleink/indigo-palette.png" 
            alt="" 
            title="Title " 
            decoding="async"
            width="2346" 
            height="382"
          /></p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-string-expression)">*</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  --color-hue</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-keyword)">rad</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">}</span></span></code></pre>
</code></pre>

        <h2>
          What to try
          <a name="what-to-try" href="#what-to-try">#</a>
        </h2>
       <p>You don&#39;t even need any other <a href="https://open-props.style/">Open Props</a> to try this beta. Snag some props that attach to <code>*</code>, and starting customizing!</p>
<p><q>You&#39;ll need a browser with oklch() support.</q></p>

        <h3>
          Color palettes
          <a name="color-palettes" href="#color-palettes">#</a>
        </h3>
       <p>Import 17 <strong>beta Open Props</strong>:</p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">@import</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;https://unpkg.com/open-props/colors-oklch.min.css&quot;</span><span style="color: var(--shiki-color-text)">;</span></span></code></pre>
</code></pre>
<p>Then set the hue for the palette:</p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-string-expression)">*</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  --color-hue</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">90</span><span style="color: var(--shiki-token-keyword)">deg</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">}</span></span></code></pre>
</code></pre>
<p>And build something rad. </p>
<p>You now have all these available to you, with <code>0</code> as the lightest, <code>15</code> as the darkest, and <code>bright</code> as the high vibrancy palette puncher color.</p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">.dark-card</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--color-15)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--color-1)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">border-color</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--color-14)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">border-top-color</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--color-bright)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">box-shadow</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--shadow-3)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">}</span></span></code></pre>
</code></pre>

        <h2>
          Named hues
          <a name="named-hues" href="#named-hues">#</a>
        </h2>
       <p>Here&#39;s each of the <a href="#named-hues">named props</a> in one nice preview. These make it convenient to <a href="#surface-and-text-tinting">try out some themes for</a> your design.</p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">@import</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;https://unpkg.com/open-props/oklch-hues.min.css&quot;</span><span style="color: var(--shiki-color-text)">;</span></span></code></pre>
</code></pre>
<p>Which gives you named <strong>beta hues</strong> like this:</p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-string-expression)">*</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  --color-hue</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--hue-pink)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">}</span></span></code></pre>
</code></pre>
<p>These are handy because <code>oklch</code> has a slightly different hue angle setup than the others, so you can&#39;t just straight transfer from <code>hsl</code> or <code>hwb</code>. Yerp.</p>
<p><img 
            loading="lazy" 
            src="https://res.cloudinary.com/dnpmdb8r8/image/upload/f_auto,c_limit,q_auto,w_auto/w_400/argyleink/oklch-palette.png" 
            alt="" 
            title="Title " 
            decoding="async"
            width="3024" 
            height="1728"
          /></p>
<p>See it in <em>your</em> browser here</p>
<p>
          <iframe 
            class="codepen-embed" 
            scrolling="no" 
            title="null" 
            src="https://codepen.io/argyleink/embed/preview/abarGpJ?default-tab=result&editable=true&theme-id=43079" 
            frameborder="no" 
            loading="lazy" 
            allowtransparency="true" 
            allowfullscreen="true"
          >
            See the Pen <a href="https://codepen.io/argyleink/embed/preview/abarGpJ">
            Hot text-emphasis</a> by Adam Argyle (<a href="https://codepen.io/argyleink">@argyleink</a>)
            on <a href="https://codepen.io">CodePen</a>.
          </iframe>
        </p>

        <h3>
          Gray palettes
          <a name="gray-palettes" href="#gray-palettes">#</a>
        </h3>
       <p>Grab the <strong>beta props</strong>:</p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">@import</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;https://unpkg.com/open-props/gray-oklch.min.css&quot;</span><span style="color: var(--shiki-color-text)">;</span></span></code></pre>
</code></pre>
<p>Without any customization, it&#39;s this neutral set:</p>
<p><img 
            loading="lazy" 
            src="https://res.cloudinary.com/dnpmdb8r8/image/upload/f_auto,c_limit,q_auto,w_auto/w_400/argyleink/neutral-palette.png" 
            alt="" 
            title="Title " 
            decoding="async"
            width="2344" 
            height="382"
          /></p>
<p><strong>BUUUUUTTTT</strong><br>tint them:</p>
<p><strong>Cool:</strong></p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">.gray-cool</span><span style="color: var(--shiki-color-text)"> { </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  --gray-hue</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">270</span><span style="color: var(--shiki-color-text)">; </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  --gray-chroma</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">.02</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">}</span></span></code></pre>
</code></pre>
<p><img 
            loading="lazy" 
            src="https://res.cloudinary.com/dnpmdb8r8/image/upload/f_auto,c_limit,q_auto,w_auto/w_400/argyleink/cool-palette.png" 
            alt="" 
            title="Title " 
            decoding="async"
            width="2346" 
            height="382"
          /></p>
<p><strong>or stone:</strong></p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">.gray-warm</span><span style="color: var(--shiki-color-text)"> { </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  --gray-hue</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">50</span><span style="color: var(--shiki-color-text)">; </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  --gray-chroma</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">.01</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">}</span></span></code></pre>
</code></pre>
<p><img 
            loading="lazy" 
            src="https://res.cloudinary.com/dnpmdb8r8/image/upload/f_auto,c_limit,q_auto,w_auto/w_400/argyleink/stone-palette.png" 
            alt="" 
            title="Title " 
            decoding="async"
            width="2344" 
            height="380"
          /></p>
<p>with just a few lines of CSS!</p>

        <h2>
          Surface and text tinting
          <a name="surface-and-text-tinting" href="#surface-and-text-tinting">#</a>
        </h2>
       <p>The Open Props <a href="https://codepen.io/argyleink/pen/KKvRORE">normalize</a> has 4 surface colors and 2 text colors that are based on the current gray palette. You can easily tint your whole design now if you used them! </p>
<p>Here&#39;s me doing it to an old demo. </p>
<p><video 
            src=https://res.cloudinary.com/dnpmdb8r8/video/upload/f_auto,q_auto/argyleink/oklch-android-palette.mp4 
            width="1510" 
            height="1132"
            alt=" "
            poster="https://res.cloudinary.com/dnpmdb8r8/video/upload/f_auto,w_auto,q_auto/f_auto,q_auto/argyleink/oklch-android-palette.jpg"
            controls 
            loop
            muted 
            playsinline 
            allowFullScreen
          /></p>
<p>I&#39;m just in devtools just changing the <code>hue</code> and <code>chroma</code> with the keyboard ðŸ¤“</p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-string-expression)">*</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  --gray-hue</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">50</span><span style="color: var(--shiki-token-keyword)">deg</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  --gray-chroma</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">.05</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">}</span></span></code></pre>
</code></pre>
<p>Check it out here:</p>
<p>
          <iframe 
            class="codepen-embed" 
            scrolling="no" 
            title="null" 
            src="https://codepen.io/argyleink/embed/preview/OJoYwgx?default-tab=result&editable=true&theme-id=43079" 
            frameborder="no" 
            loading="lazy" 
            allowtransparency="true" 
            allowfullscreen="true"
          >
            See the Pen <a href="https://codepen.io/argyleink/embed/preview/OJoYwgx">
            Hot text-emphasis</a> by Adam Argyle (<a href="https://codepen.io/argyleink">@argyleink</a>)
            on <a href="https://codepen.io">CodePen</a>.
          </iframe>
        </p>

        <h2>
          Lemme know!
          <a name="lemme-know!" href="#lemme-know!">#</a>
        </h2>
       <p>Yellow does not generate well.. so hopefully that&#39;s not your brand color. Still trying to figure out the best way to make one-o-dem.</p>
<p>But yeah, you&#39;re otherwise <strong>not stuck to a fixed set of palettes</strong>. There&#39;s <strong>no huge download</strong> to just prototype. Just <code>oklch</code> kickin ass and chewin bubble gum. Though it&#39;s def funky under <code>10%</code> lightness.. and if chroma is high and lightness is <code>100%</code>, it might not be white like you&#39;d think. ðŸ¤· </p>
<p>Thoughts on thisâ€½ </p>
<p>Come hang out on the <a href="https://discord.gg/AqA4fU886r">Open Props Discord</a>.</p>
]]></description>
            <link>https://nerdy.dev/open-props-oklch-palettes-beta?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/open-props-oklch-palettes-beta?utm_source=rss</guid>
            <category><![CDATA[blog]]></category>
            <category><![CDATA[css]]></category>
            <dc:creator><![CDATA[adam@argyleink]]></dc:creator>
            <pubDate>Fri, 31 Mar 2023 06:29:59 GMT</pubDate>
            <enclosure url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/oklch-palette.png" length="0" type="image/png"/>
            <media:thumbnail url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/oklch-palette.png"/>
        </item>
        <item>
            <title><![CDATA[On The Podrocket Pod Again]]></title>
            <description><![CDATA[
          <img style="display: none" src="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/podrocket-grab-bag.png" alt="Me, Stacy and Stephanie on a title card with the show name on it and the PodRocket logo." height="487"  width="730" />
        <p>Was on the <a href="https://twitter.com/PodRocketpod">@PodRocketPod</a>!</p>
<p>Me, <a href="https://twitter.com/5t3ph">Stephanie Eckles</a>, and <a href="https://twitter.com/StacyKvernmo">Stacy Kvernmo</a> team up and answer questions about UI and UX.</p>
<p>ðŸŽ¶ <a href="https://open.spotify.com/episode/4qeDMbldJjPJ6lmS81Xh05">Listen on Spotify</a></p>
]]></description>
            <link>https://nerdy.dev/on-the-podrocket-pod-again?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/on-the-podrocket-pod-again?utm_source=rss</guid>
            <category><![CDATA[note]]></category>
            <category><![CDATA[css]]></category>
            <category><![CDATA[media]]></category>
            <dc:creator><![CDATA[DevRel@Google]]></dc:creator>
            <pubDate>Thu, 23 Mar 2023 00:00:00 GMT</pubDate>
            <enclosure url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/podrocket-grab-bag.png" length="0" type="image/png"/>
            <media:thumbnail url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/podrocket-grab-bag.png"/>
        </item>
        <item>
            <title><![CDATA[Visbug Award Top Favorite Of 2022]]></title>
            <description><![CDATA[
          <img style="display: none" src="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/visbug-favorites-award.jpg" alt="Hefty Chrome logo inside an acryllic trophy square." height="4032"  width="3024" />
        <p><a href="https://twitter.com/search?q=%23visbug&src=typed_query">#VisBug</a> won an award ðŸ¤¯   </p>
<p><a href="https://chrome.google.com/webstore/detail/visbug/cdockenadnadldjbbgcallicgledbeoc?hl=en">Chrome Web Store</a><br><strong>Favorite of 2022</strong>  </p>
<p>This award is legit! Heavy, clever and minimal. Truly a trophy I&#39;ll keep around for a long time!</p>
<p>Thanks everyone for the support!</p>
]]></description>
            <link>https://nerdy.dev/visbug-award-top-favorite-of-2022?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/visbug-award-top-favorite-of-2022?utm_source=rss</guid>
            <category><![CDATA[note]]></category>
            <category><![CDATA[media]]></category>
            <dc:creator><![CDATA[adam@argyleink]]></dc:creator>
            <pubDate>Wed, 22 Mar 2023 16:33:40 GMT</pubDate>
            <enclosure url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/visbug-favorites-award.jpg" length="0" type="image/jpeg"/>
            <media:thumbnail url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/visbug-favorites-award.jpg"/>
        </item>
        <item>
            <title><![CDATA[6 Css Snippets Every Front End Developer Should Know In 2023]]></title>
            <description><![CDATA[<p>ðŸ†• post on <a href="https://web.dev/blog/">web.dev</a></p>
<p><a href="https://web.dev/6-css-snippets-every-front-end-developer-should-know-in-2023/">6 CSS snippets every front-end developer should know in 2023</a></p>
<p>Toolbelt worthy, powerful, and stable CSS you can use today.</p>
<p><img 
            loading="lazy" 
            src="https://res.cloudinary.com/dnpmdb8r8/image/upload/f_auto,c_limit,q_auto,w_auto/w_1024/argyleink/tools-on-bench.png" 
            alt="" 
            title="A wooden table with a hammer and a wrench neatly placed on it. " 
            decoding="async"
            width="3200" 
            height="960"
          /></p>
]]></description>
            <link>https://nerdy.dev/6-css-snippets-every-front-end-developer-should-know-in-2023?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/6-css-snippets-every-front-end-developer-should-know-in-2023?utm_source=rss</guid>
            <category><![CDATA[note]]></category>
            <category><![CDATA[css]]></category>
            <dc:creator><![CDATA[DevRel@Google]]></dc:creator>
            <pubDate>Wed, 15 Mar 2023 14:52:59 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Cyclical keyboard UX with a radio group and CSS trig functions]]></title>
            <description><![CDATA[
          <img style="display: none" src="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/cyclical-radio-cover.png" alt="Screen of the demo" height="812"  width="2198" />
        <p>CSS <a href="https://web.dev/css-trig-functions/">trig functions</a> can do some neat layout stuff, like circles! In this bite size blog post I quickly share how I turned the cyclical roving tab index feature of a radio group, into a circle so it can cycle seamlessly.</p>
<p><video 
            src=https://res.cloudinary.com/dnpmdb8r8/video/upload/f_auto,q_auto/argyleink/cyclical-radios.mp4 
            width="1476" 
            height="1476"
            alt=" "
            poster="https://res.cloudinary.com/dnpmdb8r8/video/upload/f_auto,w_auto,q_auto/f_auto,q_auto/argyleink/cyclical-radios.jpg"
            controls 
            loop
            muted 
            playsinline 
            allowFullScreen
          /></p>
<p><q class="info">I&#39;m just inside a radio group usin arrow keys.</q></p>

        <h2>
          The gist
          <a name="the-gist" href="#the-gist">#</a>
        </h2>
       <p>Bramus <a href="https://web.dev/css-trig-functions/">wrote a great post</a> on the new <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/sin">CSS trigonometry functions</a>, and it got me thinking. Those thoughts led to <a href="https://codepen.io/argyleink/pen/OJozxrB">this demo</a>, where I wanted the infinite cycling of focus of a radio group, to tail call itself via a circle layout.</p>
<pre><code class="language-html"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">fieldset</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">style</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;--sibling-count: 8&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">input</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">style</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;--sibling-index: 1&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;radio&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">name</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;cyclical-group&quot;</span><span style="color: var(--shiki-color-text)"> checked&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">input</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">style</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;--sibling-index: 2&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;radio&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">name</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;cyclical-group&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">input</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">style</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;--sibling-index: 3&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;radio&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">name</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;cyclical-group&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">input</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">style</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;--sibling-index: 4&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;radio&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">name</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;cyclical-group&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">input</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">style</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;--sibling-index: 5&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;radio&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">name</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;cyclical-group&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">input</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">style</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;--sibling-index: 6&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;radio&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">name</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;cyclical-group&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">input</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">style</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;--sibling-index: 7&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;radio&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">name</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;cyclical-group&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">input</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">style</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;--sibling-index: 8&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;radio&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">name</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;cyclical-group&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">fieldset</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>
</code></pre>
<p>I also used a custom property version of <a href="https://github.com/w3c/csswg-drafts/issues/4559">this spec proposal</a> I have open with the CSSWG for <code>sibling-count()</code> and <code>sibling-index()</code>, where an element could know how many siblings it has and which index it currently is. By &quot;used a version of this proposal&quot; I mean, I hand wrote the values ðŸ˜…</p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-string-expression)">fieldset</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">/* divide circle by total children */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  --_offset</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">calc</span><span style="color: var(--shiki-token-constant)">(360</span><span style="color: var(--shiki-token-keyword)">deg</span><span style="color: var(--shiki-token-constant)"> </span><span style="color: var(--shiki-token-keyword)">/</span><span style="color: var(--shiki-token-constant)"> </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--sibling-count))</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">/* size also used for circle translateX and Y */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  --_circle-size</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">25</span><span style="color: var(--shiki-token-keyword)">vmin</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">inline-size</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--_circle-size)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">block-size</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--_circle-size)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">/* 1x1 centered cell */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  --_cell-size</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">10</span><span style="color: var(--shiki-token-keyword)">vmin</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">display</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">grid</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">place-content</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">center</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">grid</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--_cell-size) / </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--_cell-size)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">/* stack them together in 1 cell */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &gt; * {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">grid-area</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1/1</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  }</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">}</span></span></code></pre>
</code></pre>
<p><q>Get used to that nesting syntax!! woot woot!</q></p>
<p>With a grid layout setup with all the radios aligned in the middle, and the radius known of the circle, we can do the math.</p>
<pre><code class="language-css"><pre class="shiki css-variables" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-string-expression)">input</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">/* take child index * circle fraction offset */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  --_angle</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">calc</span><span style="color: var(--shiki-token-constant)">(</span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--sibling-index) </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-token-constant)"> </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--_offset))</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">/* cos() translateX, sin() translateY */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">translate</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">    </span><span style="color: var(--shiki-token-function)">calc</span><span style="color: var(--shiki-token-constant)">(cos(</span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--_angle)) * </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--_circle-size)</span><span style="color: var(--shiki-color-text)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">calc</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">sin</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">var</span><span style="color: var(--shiki-color-text)">(--_angle)) * </span><span style="color: var(--shiki-token-constant)">var</span><span style="color: var(--shiki-color-text)">(--_circle-size))</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  ;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">}</span></span></code></pre>
</code></pre>
<p>And that&#39;s that, <a href="https://web.dev/css-individual-transform-properties/">individual transforms</a> making <code>x</code> and <code>y</code> easy to set. Each radio takes it&#39;s current index and multiplies it by the ratio in offset, then uses that angle against the circle radius with <code>cos()</code> and <code>sin()</code>. </p>
<p><strong>Rad.</strong></p>

        <h2>
          Try it on Codepen
          <a name="try-it-on-codepen" href="#try-it-on-codepen">#</a>
        </h2>
       <p>I used <a href="https://developer.chrome.com/articles/css-nesting/">CSS nesting</a> and trig functions, so you&#39;ll need Canary with web experiements turns on, for now.</p>
<p>
          <iframe 
            class="codepen-embed" 
            scrolling="no" 
            title="null" 
            src="https://codepen.io/argyleink/embed/preview/OJozxrB?default-tab=result&editable=true&theme-id=43079" 
            frameborder="no" 
            loading="lazy" 
            allowtransparency="true" 
            allowfullscreen="true"
          >
            See the Pen <a href="https://codepen.io/argyleink/embed/preview/OJozxrB">
            Hot text-emphasis</a> by Adam Argyle (<a href="https://codepen.io/argyleink">@argyleink</a>)
            on <a href="https://codepen.io">CodePen</a>.
          </iframe>
        </p>
]]></description>
            <link>https://nerdy.dev/cyclical-radio-group-with-trig-functions-and-grid?utm_source=rss</link>
            <guid isPermaLink="true">https://nerdy.dev/cyclical-radio-group-with-trig-functions-and-grid?utm_source=rss</guid>
            <category><![CDATA[blog]]></category>
            <category><![CDATA[css]]></category>
            <dc:creator><![CDATA[adam@argyleink]]></dc:creator>
            <pubDate>Fri, 10 Mar 2023 23:44:41 GMT</pubDate>
            <enclosure url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/cyclical-radio-cover.png" length="0" type="image/png"/>
            <media:thumbnail url="https://res.cloudinary.com/dnpmdb8r8/image/upload/argyleink/cyclical-radio-cover.png"/>
        </item>
    </channel>
</rss>